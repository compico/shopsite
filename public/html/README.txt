Комментарии по поводу шаблона

Шаблон начинается с `{{ define "nametemplate" }}` и заканчивается на `{{ end }}`
Где `nametemplate` - название шаблона. Если поменять - всё сломается

Шаблон работает в зависимости от того, какие данные ему даёшь.

В html файле `products.html` передаются данные всех продуктов.

И там используется цикл. Начинается с `{{ range .Product }}` заканчивается на `{{ end }}`
Это важно. т.е вне цикла вставлять переменные - запрещено. Иначе шаблон поломается.

Регистр важен.

Дальше уже вводятся данные шаблона.

{{ .Image }}        = Путь к картинке.   Пример: `/public/image/testimage/1.jpg`
{{ .Name }}         = Название товара.   Пример: `Карандаш`
{{ .NameId }}       = Это не нужно.      Пример: `0_Karandash`
{{ .Price }}        = Цена.              Пример: `5.76`
{{ .Description }}  = Описание.          Пример: `Графитовый карандаш из графита`
{{ .Category }}     = Название категории Пример: `Графитовые карандаши`
{{ .CategoryId }}   = ID категории       Пример: `Graphitoviy_karandash`
{{ .Reviews }}      = Это не реализовано.
{{ .IsDeleted }}    = Это не нужно.      Пример: `false` или `true`
{{ .ID }}           = Это ID товара      Пример: `0`
 После них НЕ нужен {{ end }}!!

Пример использование:

<img src="{{ .Image }}" alt="{{ .Description }}"> //Выведет картинку товара
<h3>{{ .Name }}</h3>                              //Выведет название товара

Ulr и запросы.

| example.com/products?category=categoryid_name = показать товары из 1 категории
| Если в category ничего не записать - покажет все товары
| Пример использования :
| <a href="/products?category={{ .CategoryId }}">{{ .Category }}</a>
| Получится ссылка на определённую категорию.

| example.com/product?product=id (Где id - цифра) = показать определённый товар
| Если зайти сюда example.com/product то скажет "Товар не найден"
| Пример использования:
| <a href="/product?product={{ .ID }}">{{ .Name }}</a>
| Получится ссылка на определённый товар.

Если нужны подробности. Ссылка на шаблонизатор. Но там всё на английском.
https://golang.org/pkg/text/template/ 
https://golang.org/pkg/html/template/ 
Но для этого golang нужно знать.